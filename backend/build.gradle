plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.kt.hackathon'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Jacoco 설정 - Service 계층만 커버리지 측정
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.required = true
    }
    
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/controller/**',
                '**/repository/**',
                '**/model/**',
                '**/dto/**',
                '**/config/**',
                '**/HackathonBackendApplication.class'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.7
            }
        }
    }
    
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/controller/**',
                '**/repository/**',
                '**/model/**',
                '**/dto/**',
                '**/config/**',
                '**/HackathonBackendApplication.class'
            ])
        }))
    }
}

test {
    finalizedBy jacocoTestReport
}

// 개발 시 자동 포맷팅 설정
bootRun {
    dependsOn spotlessApply
}

build {
    dependsOn spotlessApply
}

compileJava {
    dependsOn spotlessApply
}

// Spotless 설정
spotless {
    java {
        // Google Java Format 사용
        googleJavaFormat()
        
        // 라이센스 헤더 (선택사항)
        // licenseHeader '/* Copyright (C) $YEAR */'
        
        // 임포트 정렬
        importOrder 'java', 'javax', 'org', 'com.kt.hackathon'
        
        // 사용하지 않는 임포트 제거
        removeUnusedImports()
        
        // 라인 끝 문자 통일
        lineEndings 'UNIX'
    }
} 