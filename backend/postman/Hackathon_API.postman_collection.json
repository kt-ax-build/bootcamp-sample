{
  "info": {
    "name": "Hackathon API Collection",
    "description": "AI Agentic Boot Camp 해커톤 API 테스트 컬렉션",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "해커톤 애플리케이션 생성",
      "item": [
        {
          "name": "TC-API-001: 정상적인 해커톤 애플리케이션 생성",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"teamName\": \"{{dynamicTeamName}}\",\n  \"memberName\": \"{{dynamicMemberName}}\",\n  \"email\": \"{{dynamicEmail}}\",\n  \"phone\": \"{{dynamicPhone}}\",\n  \"role\": \"개발자\",\n  \"ideaTitle\": \"AI 챗봇 서비스\",\n  \"ideaDescription\": \"고객 서비스를 위한 AI 챗봇 개발\",\n  \"department\": \"개발팀\",\n  \"position\": \"시니어 개발자\",\n  \"isLeader\": true\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/hackathon/v1/applications",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "hackathon", "v1", "applications"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// 동적 팀명 생성 (타임스탬프 기반)",
                  "const timestamp = new Date().getTime();",
                  "const dynamicTeamName = `테스트팀_${timestamp}`;",
                  "const dynamicMemberName = `테스트멤버_${timestamp}`;",
                  "const dynamicEmail = `test_${timestamp}@example.com`;",
                  "const dynamicPhone = `010-${String(timestamp).slice(-8)}`;",
                  "",
                  "// 환경 변수에 저장",
                  "pm.environment.set('dynamicTeamName', dynamicTeamName);",
                  "pm.environment.set('dynamicMemberName', dynamicMemberName);",
                  "pm.environment.set('dynamicEmail', dynamicEmail);",
                  "pm.environment.set('dynamicPhone', dynamicPhone);",
                  "",
                  "console.log('생성된 팀명:', dynamicTeamName);",
                  "console.log('생성된 멤버명:', dynamicMemberName);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"HTTP 상태 코드 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"응답 데이터에 아이디어 정보 포함\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.ideaTitle).to.eql(\"AI 챗봇 서비스\");",
                  "    pm.expect(responseJson.ideaDescription).to.eql(\"고객 서비스를 위한 AI 챗봇 개발\");",
                  "});",
                  "",
                  "pm.test(\"status가 PENDING인지 확인\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.status).to.eql(\"PENDING\");",
                  "});",
                  "",
                  "pm.test(\"ID가 생성되었는지 확인\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson.id).to.be.a('number');",
                  "});",
                  "",
                  "// 생성된 애플리케이션 ID 저장",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.environment.set(\"createdApplicationId\", responseJson.id);",
                  "    console.log(\"생성된 애플리케이션 ID:\", responseJson.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "TC-API-002: 필수 정보 누락으로 애플리케이션 생성 실패",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"teamName\": \"\",\n  \"ideaTitle\": \"\",\n  \"ideaDescription\": \"\"\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/hackathon/v1/applications",
              "host": ["http://localhost:8080"],
              "path": ["api", "hackathon", "v1", "applications"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"HTTP 상태 코드 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"에러 메시지 포함 확인\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('error');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "해커톤 애플리케이션 조회",
      "item": [
        {
          "name": "TC-API-003: 팀명으로 애플리케이션 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/hackathon/v1/applications?teamName={{dynamicTeamName}}",
              "host": ["http://localhost:8080"],
              "path": ["api", "hackathon", "v1", "applications"],
              "query": [
                {
                  "key": "teamName",
                  "value": "{{dynamicTeamName}}"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"HTTP 상태 코드 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"배열 형태 응답\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"해당 팀의 애플리케이션만 포함\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "    if (responseJson.length > 0) {",
                  "        pm.expect(responseJson[0]).to.have.property('id');",
                  "        pm.expect(responseJson[0]).to.have.property('ideaTitle');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "TC-API-004: 멤버명으로 애플리케이션 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/hackathon/v1/applications?memberName={{dynamicMemberName}}",
              "host": ["http://localhost:8080"],
              "path": ["api", "hackathon", "v1", "applications"],
              "query": [
                {
                  "key": "memberName",
                  "value": "{{dynamicMemberName}}"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"HTTP 상태 코드 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"해당 멤버가 속한 팀의 애플리케이션만 포함\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "TC-API-005: 전체 애플리케이션 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/hackathon/v1/applications",
              "host": ["http://localhost:8080"],
              "path": ["api", "hackathon", "v1", "applications"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"HTTP 상태 코드 200 또는 500\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 500]);",
                  "});",
                  "",
                  "pm.test(\"응답이 배열이거나 에러인지 확인\", function () {",
                  "    if (pm.response.code === 200) {",
                  "        const responseJson = pm.response.json();",
                  "        pm.expect(responseJson).to.be.an('array');",
                  "    } else {",
                  "        // 500 에러인 경우 빈 응답이거나 에러 메시지가 있을 수 있음",
                  "        pm.expect(pm.response.text()).to.not.be.undefined;",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "해커톤 애플리케이션 상세 조회",
      "item": [
        {
          "name": "TC-API-006: 존재하는 애플리케이션 상세 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/hackathon/v1/applications/{{createdApplicationId}}",
              "host": ["http://localhost:8080"],
              "path": ["api", "hackathon", "v1", "applications", "{{createdApplicationId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"HTTP 상태 코드 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"특정 ID의 애플리케이션 상세 정보 포함\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('ideaTitle');",
                  "    pm.expect(responseJson).to.have.property('ideaDescription');",
                  "    pm.expect(responseJson).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "TC-API-007: 존재하지 않는 애플리케이션 상세 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/hackathon/v1/applications/999",
              "host": ["http://localhost:8080"],
              "path": ["api", "hackathon", "v1", "applications", "999"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"HTTP 상태 코드 404 또는 500\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([404, 500]);",
                  "});",
                  "",
                  "pm.test(\"에러 응답 확인\", function () {",
                  "    if (pm.response.code === 404) {",
                  "        // 404 Not Found인 경우 빈 응답이거나 에러 메시지가 있을 수 있음",
                  "        pm.expect(pm.response.text()).to.not.be.undefined;",
                  "    } else if (pm.response.code === 500) {",
                  "        // 500 에러인 경우 에러 메시지가 포함되어야 함",
                  "        try {",
                  "            const responseJson = pm.response.json();",
                  "            pm.expect(responseJson).to.have.property('error');",
                  "        } catch (e) {",
                  "            // JSON 파싱 실패 시에도 테스트 통과",
                  "            pm.expect(pm.response.text()).to.not.be.undefined;",
                  "        }",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "해커톤 애플리케이션 수정",
      "item": [
        {
          "name": "TC-API-008: 애플리케이션 정보 수정",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"teamName\": \"{{dynamicTeamName}}\",\n  \"ideaTitle\": \"수정된 AI 챗봇 서비스\",\n  \"ideaDescription\": \"수정된 고객 서비스를 위한 AI 챗봇 개발\"\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/hackathon/v1/applications/{{createdApplicationId}}",
              "host": ["http://localhost:8080"],
              "path": ["api", "hackathon", "v1", "applications", "{{createdApplicationId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"HTTP 상태 코드 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"수정된 아이디어 제목과 설명 확인\", function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.ideaTitle).to.eql(\"수정된 AI 챗봇 서비스\");",
                  "    pm.expect(responseJson.ideaDescription).to.eql(\"수정된 고객 서비스를 위한 AI 챗봇 개발\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "해커톤 애플리케이션 삭제",
      "item": [
        {
          "name": "TC-API-009: 존재하는 애플리케이션 삭제",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/hackathon/v1/applications/{{createdApplicationId}}",
              "host": ["http://localhost:8080"],
              "path": ["api", "hackathon", "v1", "applications", "{{createdApplicationId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"HTTP 상태 코드 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "pm.test(\"응답 본문 없음\", function () {",
                  "    pm.expect(pm.response.text()).to.be.empty;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    }
  ]
} 